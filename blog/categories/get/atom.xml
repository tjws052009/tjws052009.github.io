<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: get | Quick Memos]]></title>
  <link href="http://tjws052009.github.io/blog/categories/get/atom.xml" rel="self"/>
  <link href="http://tjws052009.github.io/"/>
  <updated>2014-02-21T15:47:45+09:00</updated>
  <id>http://tjws052009.github.io/</id>
  <author>
    <name><![CDATA[Tomo S.]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[get and post method for sinatra]]></title>
    <link href="http://tjws052009.github.io/blog/2014/02/04/get-and-post-method-for-sinatra/"/>
    <updated>2014-02-04T18:17:18+09:00</updated>
    <id>http://tjws052009.github.io/blog/2014/02/04/get-and-post-method-for-sinatra</id>
    <content type="html"><![CDATA[<p>Sinatraでエンドポイントを用意して、リアルタイムにIDの重複チェックとかしたいと思い、ajaxで使用する前提の物を書いてみた。</p>

<p>id の値をサーバーにPOSTし、結果が json で返ってくるようにしてみた。
今回は開発環境でドメインまたいでテストを行えたらいいなと思い
jsonpで返そうと当初は考えていた。</p>

<p>```</p>

<h1>頭の中ではこんな感じになればいいなと</h1>

<p>$ curl -d &lsquo;id=testtsugi01&rsquo; <a href="http://test.tsugi2009.com/verify_id">http://test.tsugi2009.com/verify_id</a></p>

<h1>=> verify({&ldquo;status&rdquo;: &ldquo;ok&rdquo;, error: []})</h1>

<p>```</p>

<p>で、こんなコードを書いてみた</p>

<p>```</p>

<h1>sinatra.rb</h1>

<p>post &lsquo;/verify_id&rsquo; do
  result = User.verify_id(params[&lsquo;id&rsquo;])</p>

<p>  return &ldquo;verify(#{ {status: result, error: []}.to_json})&rdquo;
end
```</p>

<p>```javascript</p>

<h1>test.js</h1>

<p><form action="http://test.tsugi2009.com/verify_id" method="POST" id="piyof">
  <input type="text" name="id" />
  <input type="submit" />
</form></p>

<script>
  $('#piyof_submit').on('click', function() {
    $.ajax({
      type: "POST",
      url: "http://test.tsugi2009.com/verify_id",
      data: $('#piyof').serialize(),
      dataType: 'jsonp',
      jsonpCallback: 'verify',
      success: function(data) {
        console.debug(data)
      }
    })
  });
</script>


<p>```</p>

<p>とりあえず、 <a href="http://test.tsugi2009.com/">http://test.tsugi2009.com/</a> 下なら大丈夫だけど <a href="http://tsugi2009.com/">http://tsugi2009.com/</a> とかドメインまたぐとちゃんと動かない。
POSTのはずが、GETでパラメーターを送信してたり。（それで 404 が返ってきて一瞬焦った）</p>

<p>良く考えると（良く考えなくても）、そもそもクロスドメイン制約でjsonpのPOSTとかできへんやん・・・
しかも、POST前提に組んでたので、GETになったjsonp リクエストには対応出来ず 404 が返る状況に。</p>

<p>とりあえず、色々諦めて、開発中はjsonpを使って、本番ではjsonにしてもらうっていう綱渡りような事に。
ただし、SinatraでひとつのエンドポイントをGETとPOSTに対応するため、似たようなコードを二回書く事になるのか、と思いGETとPOSTに対応した物が出来ないか調べてみた。そしてここに行き着く。</p>

<p><a href="http://ujihisa.blogspot.jp/2009/11/accepting-both-get-and-post-method-in.html">Accepting Both Get And Post Method in Sinatra</a></p>

<p>出来るならやるしないですよね。言うことで、それも含め実装。</p>

<p>```</p>

<h1>sinatra.rb</h1>

<p>module Sinatra
  module GetOrPost</p>

<pre><code>def get_or_post(path, opts={}, &amp;block)
  get(path, opts={}, &amp;block) 
  post(path, opts={}, &amp;block) 
end
</code></pre>

<p>  end
end</p>

<p>register GetOrPost</p>

<p>get_or_post &lsquo;/verify_id&rsquo; do
  result = User.verify_id(params[&lsquo;id&rsquo;])</p>

<p>  # 本当に正しくPOSTされたら json っていう前提で書いてます。gkbr
  
  return {status: result, error: []}.to_json if request.request_method == &lsquo;POST&rsquo;
  return &ldquo;verify(#{ {status: result, error: []}.to_json})&rdquo;
  
end</p>

<p>```</p>

<p>```javascript</p>

<h1>prod.js</h1>

<p>// 本番用 同じ、 tsugi2009.comの下で動いてるはず
<form action="http://tsugi2009.com/verify_id" method="POST" id="piyof">
  <input type="text" name="id" />
  <input type="submit" />
</form></p>

<script>
  $('#piyof_submit').on('click', function() {
    $.ajax({
      type: "POST",
      url: "http://tsugi2009.com/verify_id",
      data: $('#piyof').serialize(),
      dataType: 'json',
      success: function(data) {
        console.debug(data)
      }
    })
  });
</script>


<h1>test.js</h1>

<p>// テスト用。 test.tsugi2009.com から叩かれるとは限らない
<form action="http://test.tsugi2009.com/verify_id" method="POST" id="piyof">
  <input type="text" name="id" />
  <input type="submit" />
</form></p>

<script>
  $('#piyof_submit').on('click', function() {
    $.ajax({
      type: "GET",
      url: "http://test.tsugi2009.com/verify_id",
      data: $('#piyof').serialize(),
      dataType: 'jsonp',
      jsonpCallback: 'verify',
      success: function(data) {
        console.debug(data)
      }
    })
  });
</script>


<p>```</p>

<p>やっと動いた。ajaxで色々と忘れそうなので、この実装をどうにかしたいと思ってるけど、どうしよう。</p>
]]></content>
  </entry>
  
</feed>
